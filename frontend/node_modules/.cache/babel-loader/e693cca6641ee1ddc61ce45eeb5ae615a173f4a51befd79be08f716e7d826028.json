{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FredrikHelander\\\\monday-workload-app\\\\frontend\\\\src\\\\components\\\\WorkloadDashboard.tsx\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  normal: '#82ca9d',\n  overloaded: '#ff4d4f'\n};\nconst WorkloadDashboard = ({\n  team,\n  workload\n}) => {\n  const data = team.map(member => ({\n    name: member.name,\n    capacity: member.capacity,\n    workload: workload[member.name] || 0,\n    overloaded: (workload[member.name] || 0) > member.capacity\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Workload Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"workload\",\n          children: data.map((entry, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: entry.overloaded ? COLORS.overloaded : COLORS.normal\n          }, `cell-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"capacity\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          color: entry.overloaded ? COLORS.overloaded : undefined\n        },\n        children: [entry.name, \": \", entry.workload, \" / \", entry.capacity, \" hrs \", entry.overloaded ? '⚠️ Overloaded' : '']\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = WorkloadDashboard;\nexport default WorkloadDashboard;\nvar _c;\n$RefreshReg$(_c, \"WorkloadDashboard\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","Cell","jsxDEV","_jsxDEV","COLORS","normal","overloaded","WorkloadDashboard","team","workload","data","map","member","name","capacity","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","dataKey","entry","idx","fill","style","color","undefined","_c","$RefreshReg$"],"sources":["C:/Users/FredrikHelander/monday-workload-app/frontend/src/components/WorkloadDashboard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\n\r\ninterface TeamMember {\r\n  name: string;\r\n  capacity: number;\r\n}\r\n\r\ninterface Workload {\r\n  [name: string]: number; // name -> assigned hours\r\n}\r\n\r\nconst COLORS = {\r\n  normal: '#82ca9d',\r\n  overloaded: '#ff4d4f',\r\n};\r\n\r\nconst WorkloadDashboard: React.FC<{\r\n  team: TeamMember[];\r\n  workload: Workload;\r\n}> = ({ team, workload }) => {\r\n  const data = team.map(member => ({\r\n    name: member.name,\r\n    capacity: member.capacity,\r\n    workload: workload[member.name] || 0,\r\n    overloaded: (workload[member.name] || 0) > member.capacity,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h2>Workload Dashboard</h2>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"workload\">\r\n            {data.map((entry, idx) => (\r\n              <Cell key={`cell-${idx}`} fill={entry.overloaded ? COLORS.overloaded : COLORS.normal} />\r\n            ))}\r\n          </Bar>\r\n          <Bar dataKey=\"capacity\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n      <ul>\r\n        {data.map((entry, idx) => (\r\n          <li key={idx} style={{ color: entry.overloaded ? COLORS.overloaded : undefined }}>\r\n            {entry.name}: {entry.workload} / {entry.capacity} hrs {entry.overloaded ? '⚠️ Overloaded' : ''}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkloadDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}